trigger:
- main
 
pool:
  vmImage: ubuntu-latest
 
variables:
  python.version: '3.11'
  appTypeLinux: 'webAppLinux'
  runtimeStack: 'PYTHON:3.11'
  artifactName: 'drop'
  productionAppName: 'appservice-javi'
  archiveType: 'zip'

variables:
  - group: publish

stages:
- stage: BuildAndTest
  displayName: 'Build and Test'
  jobs:
  - job: BuildAndTest
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'
 
    - script: |
        python -m pip install --upgrade pip 
        pip install -r requirements.txt 
      displayName: 'Install dependencies'

    - script: |
        pip install pytest pytest-azurepipelines 
        pytest 
      displayName: 'Run tests'
    
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: $(System.DefaultWorkingDirectory)
        includeRootFolder: false
        archiveType: $(archiveType)
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-$(python.version).zip 
        replaceExistingArchive: true 

    - task: PublishBuildArtifacts@1 
      inputs: 
        PathtoPublish: '$(Build.ArtifactStagingDirectory)' 
        ArtifactName: '$(artifactName)' 
        publishLocation: 'Container'

- stage: DeployToProduction
  displayName: 'Deploy to Production'
  jobs:
  - deployment: DeployToProduction
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: '$(artifactName)'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: AzureWebApp@1
            inputs:
              publishProfilePath: '$(publishProfilePath)'
              appName: '$(productionAppName)'
              package: '$(System.ArtifactsDirectory)/$(artifactName)/$(Build.BuildId)-$(python.version).zip'
